package models

import "time"

type ClientKeyResponse struct {
	Embedded Embedded `json:"_embedded"`
	Links    Links    `json:"_links"`
}

type Key struct {
	Kty string `json:"kty"`
	Use string `json:"use"`
	Kid string `json:"kid"`
	K   string `json:"k"`
	Alg string `json:"alg"`
}

type Timestamps struct {
	Created time.Time `json:"CREATED"`
}

type ClientKeys struct {
	Key        Key        `json:"key"`
	ClientID   string     `json:"clientId"`
	KeyID      string     `json:"keyId"`
	Timestamps Timestamps `json:"timestamps"`
}

type Embedded struct {
	ClientKeys []ClientKeys `json:"clientKeys"`
}

type ClientKey struct {
	Href string `json:"href"`
}
type Links struct {
	ClientKey []ClientKey `json:"clientKey"`
}

type AccessTokenResponse struct {
	AccessToken string `json:"access_token"`
	TokenType   string `json:"token_type"`
	ExpiresIn   int    `json:"expires_in"`
}

// Access Token, Refresh Token and ID Token for upcoming requests
type TokenResponse struct {
	AccessToken  string `json:"access_token"`
	RefreshToken string `json:"refresh_token"`
	Data         string `json:"data"`
	IDToken      string `json:"id_token"`
	TokenType    string `json:"token_type"`
	ExpiresIn    int    `json:"expires_in"`
}

type UserIDResponse struct {
	ElevatedAt              interface{} `json:"elevatedAt"`
	LegacyDomain            interface{} `json:"legacyDomain"`
	GgUserDataUpdated       time.Time   `json:"ggUserDataUpdated"`
	UserID                  int64       `json:"userId"`
	Domain                  string      `json:"domain"`
	Region                  string      `json:"region"`
	Status                  string      `json:"status"`
	MergedUserID            interface{} `json:"merged_user_id"`
	UserChangedPasswordAt   time.Time   `json:"user_changed_password_at"`
	PasswordMigratedAt      interface{} `json:"password_migrated_at"`
	SystemChangedPasswordAt interface{} `json:"system_changed_password_at"`
	Timestamps              struct {
		Created time.Time `json:"CREATED"`
	} `json:"timestamps"`
	Profile struct {
		GgUserDataUpdated time.Time   `json:"ggUserDataUpdated"`
		UserID            int64       `json:"userId"`
		FullName          interface{} `json:"fullName"`
		DisplayName       string      `json:"displayName"`
		LastName          interface{} `json:"lastName"`
		FirstName         interface{} `json:"firstName"`
		ProfilePictureURI string      `json:"profilePictureUri"`
		Birthdate         string      `json:"birthdate"`
		Gender            string      `json:"gender"`
		Weight            float64     `json:"weight"`
		Height            float64     `json:"height"`
		Locale            string      `json:"locale"`
		Location          struct {
			PostalCode string `json:"postalCode"`
			Country    string `json:"country"`
		} `json:"location"`
		Source     string `json:"source"`
		Timestamps struct {
		} `json:"timestamps"`
		TermsOfService struct {
		} `json:"termsOfService"`
	} `json:"profile"`
	AccountLinks []struct {
		UserID       int64  `json:"userId"`
		Domain       string `json:"domain"`
		DomainUserID string `json:"domainUserId"`
		Timestamps   struct {
		} `json:"timestamps"`
		ConsentMatrixVersion string `json:"consent_matrix_version"`
		Consents             struct {
			LocalizedAds    bool `json:"localized_ads"`
			PersonalizedAds bool `json:"personalized_ads"`
		} `json:"consents"`
		AdConsentsLastSeen time.Time `json:"ad_consents_last_seen"`
		AdvertisingIds     struct {
		} `json:"advertising_ids"`
		IsAutoGenerated interface{} `json:"isAutoGenerated"`
	} `json:"accountLinks"`
	SocialMediaLinks []interface{} `json:"socialMediaLinks"`
	ProfileEmails    struct {
		IsEmailVerified bool `json:"isEmailVerified"`
		Emails          []struct {
			PendingEmail            interface{} `json:"pendingEmail"`
			VerificationState       string      `json:"verificationState"`
			VerificationRequestedAt interface{} `json:"verificationRequestedAt"`
			VerificationConfirmedAt interface{} `json:"verificationConfirmedAt"`
			VerificationRemovedAt   interface{} `json:"verificationRemovedAt"`
			VerificationCanceledAt  interface{} `json:"verificationCanceledAt"`
			GgUserDataUpdated       time.Time   `json:"ggUserDataUpdated"`
			Source                  interface{} `json:"source"`
			Verified                bool        `json:"verified"`
			Primary                 bool        `json:"primary"`
			Type                    string      `json:"type"`
			Scopes                  interface{} `json:"scopes"`
			Timestamps              struct {
				Created              time.Time   `json:"CREATED"`
				Updated              time.Time   `json:"UPDATED"`
				VerificationReceived interface{} `json:"VERIFICATION_RECEIVED"`
			} `json:"timestamps"`
			UserID int64  `json:"userId"`
			Email  string `json:"email"`
		} `json:"emails"`
	} `json:"profileEmails"`
	Links struct {
		Self struct {
			Href string `json:"href"`
		} `json:"self"`
		User struct {
			Href string `json:"href"`
		} `json:"user"`
		Profile struct {
			Href string `json:"href"`
		} `json:"profile"`
		Emails struct {
			Href string `json:"href"`
		} `json:"emails"`
		Activities struct {
			Href string `json:"href"`
		} `json:"activities"`
	} `json:"_links"`
	UserIDStr string `json:"userId_str"`
}
